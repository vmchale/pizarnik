@i prelude/fn

%-

type List a = `nil ⊕ List(a) a `cons;

type NE a = List(a) a `cons;

head : NE a -- a
     := [ `cons⁻¹ nip ]

foldr : [ a b -- b ] b List(a) -- b
      := [ { `nil⁻¹ nip & `cons⁻¹ [dup] dip2 [ swap $ ] dip foldr } ]

# concat : List(a) List(a) -- List(a)
       # := [ ]
