@i prelude/fn

%-

type Maybe a = a `just ⊕ `nothing;

isJust : Maybe(a) -- Bool
       := [ { `just⁻¹ _ True & `nothing⁻¹ False } ]

isNothing : Maybe(a) -- Bool
          := [ { `just⁻¹ _ False & `nothing⁻¹ True } ]

just : b [a -- b] a `just -- b
     := [ `just⁻¹ nip2 swap $ ]

maybe1 : b [a -- b] Maybe(a) -- b
      := [ { just & `nothing⁻¹ _ } ]

maybe : b [a -- b] Maybe(a) -- b
      := [ { `just⁻¹ nip2 swap $ & `nothing⁻¹ _ } ]

join : Maybe(Maybe(a)) -- Maybe(a)
     := [ { `just⁻¹ & `nothing⁻¹ `nothing } ]
