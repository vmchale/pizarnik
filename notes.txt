`just --
`nothing -- `nothing

join : Maybe(Maybe(a)) -- Maybe(a)
     := [ { `just⁻¹ & `nothing⁻¹ `nothing } ]

(at this point `just already has something on the stack... anyway c `just -- c ; `nothing -- `nothing we *do* expand... but we then when `nothing unifies with c on the right, it propagates to the left, and suddenly the focus prevents generalization)


'A {a b `t ⊕ a a `f} and a a B
(split)


`e --
{`e ⊕ `a ⊕ `b ⊕ `c} `a -- {`e ⊕ `a ⊕ `b ⊕ `c}

1 0
2 1

a `just -- Bool
`nothing -- Bool

2 1
1 1

`just --
`nothing -- `nothing
1 0
1 1

(excess on the right?) why not use a stack variable rip
